@booklet{cisco,
	title = {Cisco Annual Internet Report (2018–2023) White Paper},
	author = {Cisco},
	year = {2020},
	url = {https://www.cisco.com/c/en/us/solutions/collateral/executive-perspectives/annual-internet-report/white-paper-c11-741490.html},
}
@misc{jumbotron,
	title = {Junkyard Jumbotron},
	author = {Andrew Lippman, Rahul Bhargava, Chris Csikszentmihályi, Richard D. Borovoy},
	year = {2010},
	url = {https://www.media.mit.edu/projects/junkyard-jumbotron/overview/},
}
@inproceedings{wang2016iros,
    AUTHOR     = {John Wang and Edwin Olson},
    TITLE      = {{AprilTag} 2: Efficient and robust fiducial detection},
    BOOKTITLE  = {Proceedings of the {IEEE/RSJ} International Conference on Intelligent
                 Robots and Systems {(IROS)}},
    YEAR       = {2016},
    MONTH      = {October},
}
@inproceedings{lomont2008random,
  title={Random number generation},
  author={Lomont, Chris},
  booktitle={Game programming Gems 7},
  pages={113--125},
  year={2008},
  organization={Course Technology}
}
@article{moreno2015linear,
  title={Linear congruence generators},
  author={Moreno, Matthew},
  year={2015}
}
@article{rotenberg1960pseudo,
author = {Rotenberg, A.},
title = {A New Pseudo-Random Number Generator},
year = {1960},
issue_date = {Jan. 1960},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/321008.321019},
doi = {10.1145/321008.321019},
abstract = {Although the multiplicative congruential method for generating pseudo-random numbers is widely used and has passed a number of tests of randomness [1, 2], attempts have been made to find an additive congruential method since it could be expected to be faster. Tests on a Fibonacci sequence [1] have shown it to be unsatisfactory. The sequence xi+1 = (2a + 1) xi + c (mod 235) (1) has been tested on the IBM 704. In appendix I it is shown that the sequence generates the full period of 235 numbers for a ≧ 2 and c odd. Similar results obtain for decimal machines. Since multiplication by a power of the base can be accomplished by shifting, which is comparable in speed to addition, this scheme requires essentially three additions. It takes 14 machine cycles on the IBM 704, compared to 28 for the multiplicative method, so that the saving is 168 μs/random number. The scheme has the further advantage that it does not destroy the multiplier-quotient register.Some tests have been made on the randomness of this sequence for a = 7 and c = 1, and a summary of the results is given in appendix II, where now the random numbers are considered to lie in the interval (0, 1).The serial correlation coefficient between one member of this sequence and the next is shown by Coveyou [3] to be approximately 0.8 per cent. By taking a = 9 this correlation coefficient can be reduced to approximately 0.2 per cent without increasing the time. Taking a = 21 would make this correlation very small but would require one more machine cycle on the IBM 704. Another way to reduce the correlation is to choose c such that the numerator in Coveyou's expression for the correlation coefficient is zero. This cannot be done exactly since it requires that c = (.5 ± √3/6)2P where P is the number of binary digits (excluding sign) in a machine word. However, a machine representation close to either of these numbers should be satisfactory. Some correlations with c = (.788+)235 and a = 7 were obtained and did not differ significantly from those given for c = 1 in the first section of appendix II.The author wishes to thank R. R. Coveyou for communicating his results in advance of publication and Elizabeth Wetherell for carrying out the calculations.},
journal = {J. ACM},
month = jan,
pages = {75–77},
numpages = {3}
}
@misc{mantine,
  title ={Mantine},
  url = {https://mantine.dev/}
}
@misc{nextjs,
  title ={Next.js},
  url = {https://nextjs.org/}
}
@misc{t3,
  title ={Create T3 App},
  url = {https://create.t3.gg/}
}
@misc{typescript,
  title ={TypeScript},
  url = {https://www.typescriptlang.org/}
}
@misc{video-ninja,
  title = {VDO.Ninja},
  url = {https://vdo.ninja/}
}
@misc{opencv-homography,
  title={Basic concepts of the homography explained with code},
  url={https://docs.opencv.org/4.x/d9/dab/tutorial_homography.html}
}
@misc{react,
  title = {React},
  url={https://react.dev/}
}
@misc{minio,
  title = {Minio},
  url = {https://min.io/}
}
@misc{s3,
  title = {S3},
  url = {https://aws.amazon.com/s3/}
}
@misc{trpc,
  title = {tRPC},
  url = {https://trpc.io//}
}
@misc{s3-presigned,
  title = {S3 - Sharing objects with presigned URLs},
  url = {https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html}
}
@misc{docker,
  title = {Docker},
  url = {https://www.docker.com/}
}
@misc{docker-compose,
  title = {Docker Compose},
  url = {https://docs.docker.com/compose/}
}
@misc{react-context,
  title = {padding Data Deeply with Context},
  url={https://react.dev/learn/passing-data-deeply-with-context}
}
@misc{theirstack,
  title = {TheirStack - Companies that use Minio},
  url = {https://theirstack.com/en/technology/minio},
  urldate = {2025-04-29}
}
@misc{rfc2046,
    series =    {Request for Comments},
    number =    2046,
    howpublished =  {RFC 2046},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC2046},
    url =       {https://www.rfc-editor.org/info/rfc2046},
    author =    {Ned Freed and Dr. Nathaniel S. Borenstein},
    title =     {{Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types}},
    pagetotal = 44,
    year =      1996,
    month =     nov,
    abstract =  {This second document defines the general structure of the MIME media typing system and defines an initial set of media types. {[}STANDARDS-TRACK{]}},
}